server:
  port: ${SERVER_PORT:8084}
  shutdown: graceful

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: notification-api
  lifecycle:
    timeout-per-shutdown-phase: 30s

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "org.hospital.notification.dto.*"
        spring.json.value.default.type: "org.hospital.notification.dto.request.NotificationRequest"

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,shutdown
  endpoint:
    shutdown:
      enabled: true

logging:
  level:
    org.hospital.notification: DEBUG
    org.springframework.kafka: DEBUG
    reactor.kafka: DEBUG

---
spring:
  config:
    activate:
      on-profile: docker

  kafka:
    bootstrap-servers: kafka:29092

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}

kafka:
  topic:
    name: "notification-topic"
  group:
    id: "notification-group"

logging:
  level:
    org.hospital.notification: INFO
    org.springframework.kafka: INFO