server:
  port: ${SERVER_PORT:8084}
  shutdown: graceful

kafka:
  topic:
    name: ${KAFKA_TOPIC_NAME:notification-topic}
  group:
    id: ${KAFKA_GROUP_ID:notification-service-group}

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: notification-api
  lifecycle:
    timeout-per-shutdown-phase: 30s

  datasource:
    url: ${DATASOURCE_URL:jdbc:postgresql://localhost:5433/fase3}
    username: ${DATASOURCE_USERNAME:postgres}
    password: ${DATASOURCE_PASSWORD:7KTu)$U9W1%7}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    properties:
      hibernate:
        globally_quoted_identifiers: true
        default_schema: hospital
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: notificationRequest:org.hospital.notification.dto.request.NotificationRequest
        spring.json.add.type.headers: false
    consumer:
      group-id: notification-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.type.mapping: notificationRequest:org.hospital.notification.dto.request.NotificationRequest
        spring.json.trusted.packages: "org.hospital.notification.dto.request"
        spring.json.value.default.type: "org.hospital.notification.dto.request.NotificationRequest"

management:
  endpoints:
    web:
      exposure:
        include: health,info,shutdown
  endpoint:
    shutdown:
      enabled: true

logging:
  level:
    org.hospital.notification: DEBUG
    reactor.kafka: DEBUG

---
spring:
  config:
    activate:
      on-profile: docker

  kafka:
    bootstrap-servers: kafka:9092